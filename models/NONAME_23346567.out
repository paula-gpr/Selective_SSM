/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 1: from: command not found
/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 2: from: command not found
import: unable to open X server `' @ error/import.c/ImportImageCommand/346.
import: unable to open X server `' @ error/import.c/ImportImageCommand/346.
import: unable to open X server `' @ error/import.c/ImportImageCommand/346.
/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 6: from: command not found
/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 7: from: command not found
/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 8: from: command not found
import: unable to open X server `' @ error/import.c/ImportImageCommand/346.
/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 10: from: command not found
/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 15: syntax error near unexpected token `class'
/zhome/06/1/203182/.lsbatch/1733331773.23346567.shell: line 15: `class EHRDataset(Dataset):'

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 23346567: <NONAME> in cluster <dcc> Exited

Job <NONAME> was submitted from host <hpclogin2> by user <s233165> in cluster <dcc> at Wed Dec  4 18:02:53 2024
Job was executed on host(s) <n-62-31-21>, in queue <hpc>, as user <s233165> in cluster <dcc> at Wed Dec  4 18:02:54 2024
</zhome/06/1/203182> was used as the home directory.
</zhome/06/1/203182/Documents/selectiveSSM/Selective_SSM/models> was used as the working directory.
Started at Wed Dec  4 18:02:54 2024
Terminated at Wed Dec  4 18:02:55 2024
Results reported at Wed Dec  4 18:02:55 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
from transformers.models.mamba.configuration_mamba import MambaConfig
from transformers.models.mamba.modeling_mamba import MambaForCausalLM
import torch
import torch.nn as nn
import torch.optim as optim
from torch.utils.data import DataLoader, Dataset
from torch.nn.utils.rnn import pad_sequence
from sklearn.metrics import accuracy_score, roc_auc_score, average_precision_score
import numpy as np
from collections import Counter

torch.cuda.empty_cache()

# Custom PyTorch Dataset
class EHRDataset(Dataset):
    def __init__(self, data):
        self.data = data

    def __len__(self):
        return len(self.data)

    def __getitem__(self, idx):
        item = self.data[idx]
        ts_values = torch.tensor(item['ts_values'], dtype=torch.float32)
        static = torch.tensor(item['static'], dtype=torch.float32)
        label = torch.tensor(item['labels'], dtype=torch.long)
        return ts_values, static, label


# Custom collate_fn
def custom_collate_fn(batch):
    ts_values = [item[0] for item in batch]
    static_features = torch.stack([item[1] for item in batch])
    labels = torch.stack([item[2] for item in batch])

    ts_values_padded = pad_sequence(ts_values, batch_first=True)
    lengths = torch.tensor([len(item[0]) for item in batch], dtype=torch.long)

    return ts_values_padded, static_features, labels, lengths


# Cuantización de tensores con ajuste de rango
def quantize_tensor(tensor, num_bins):
    """Convierte valores continuos en índices discretos después de normalización."""
    min_val, max_val = tensor.min(), tensor.max()

    # Ajustar los valores al rango positivo [0, max_val - min_val]
    tensor_normalized = (tensor - min_val) / (max_val - min_val)

    # Crear bins en el rango [0, 1] y cuantizar

(... more ...)
------------------------------------------------------------

Exited with exit code 2.

Resource usage summary:

    CPU time :                                   0.48 sec.
    Max Memory :                                 -
    Average Memory :                             -
    Total Requested Memory :                     1024.00 MB
    Delta Memory :                               -
    Max Swap :                                   -
    Max Processes :                              -
    Max Threads :                                -
    Run time :                                   1 sec.
    Turnaround time :                            2 sec.

The output (if any) is above this job summary.

